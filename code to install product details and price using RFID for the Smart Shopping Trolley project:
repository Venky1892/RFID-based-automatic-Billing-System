#include <SPI.h>
#include <MFRC522.h>
#include <LiquidCrystal.h>

#define SS_PIN 10
#define RST_PIN 9

MFRC522 rfid(SS_PIN, RST_PIN);
LiquidCrystal lcd(7, 6, 5, 4, 3, 2);

struct Product {
  String name;
  float price;
};

Product products[10];
int productCount = 0;
float totalBill = 0;

void setup() {
  Serial.begin(9600);
  SPI.begin();
  rfid.PCD_Init();
  lcd.begin(16, 2);
  lcd.print("Smart Trolley");
  delay(2000);
  lcd.clear();
}

void loop() {
  if (!rfid.PICC_IsNewCardPresent() || !rfid.PICC_ReadCardSerial())
    return;

  String rfidUID = "";
  for (byte i = 0; i < rfid.uid.size; i++) {
    rfidUID += String(rfid.uid.uidByte[i] < 0x10 ? "0" : "");
    rfidUID += String(rfid.uid.uidByte[i], HEX);
  }

  if (Serial.available() > 0) {
    String input = Serial.readStringUntil('\n');
    if (input.startsWith("ADD:")) {
      addProduct(rfidUID, input.substring(4));
    }
  } else {
    scanProduct(rfidUID);
  }

  rfid.PICC_HaltA();
  rfid.PCD_StopCrypto1();
}

void addProduct(String rfidUID, String details) {
  int separatorIndex = details.indexOf(',');
  if (separatorIndex != -1 && productCount < 10) {
    String name = details.substring(0, separatorIndex);
    float price = details.substring(separatorIndex + 1).toFloat();
    
    products[productCount] = {name, price};
    productCount++;
    
    lcd.clear();
    lcd.print("Product added:");
    lcd.setCursor(0, 1);
    lcd.print(name);
    delay(2000);
  }
}

void scanProduct(String rfidUID) {
  for (int i = 0; i < productCount; i++) {
    if (rfidUID == products[i].name) {
      totalBill += products[i].price;
      lcd.clear();
      lcd.print(products[i].name);
      lcd.setCursor(0, 1);
      lcd.print("Price: $");
      lcd.print(products[i].price, 2);
      delay(2000);
      lcd.clear();
      lcd.print("Total: $");
      lcd.print(totalBill, 2);
      return;
    }
  }
  lcd.clear();
  lcd.print("Unknown product");
  delay(2000);
}
